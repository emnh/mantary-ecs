Prompt: 1 / 1Make the function return a promise as well.
Answer: 1 / 1Sure,
here's an updated version of the loadPrism() function that returns a
promise:javascriptCopy codefunction loadPrism() {
  return new Promise((resolve,
reject) => {
    window.Prism = window.Prism || {};
    window.Prism.manual =
true;

    const prismStylesheet = document.createElement("link");
prismStylesheet.setAttribute("rel", "stylesheet");
prismStylesheet.setAttribute("href",
"https://cdn.jsdelivr.net/npm/prismjs@1.29.0/themes/prism.css");
document.head.appendChild(prismStylesheet);

    const prismScript =
document.createElement("script");
    prismScript.setAttribute("src",
"https://cdn.jsdelivr.net/npm/prismjs@1.29.0/prism.js");
prismScript.dataset.manual = true;

    const prismScript3 =
document.createElement("script");
    prismScript3.setAttribute("src",
"https://cdn.jsdelivr.net/npm/prismjs@1.29.0/plugins/autoloader/prism-autoloader.js");
prismScript3.dataset.manual = true;

    const prismStylesheet2 =
document.createElement("link");
    prismStylesheet2.setAttribute("rel",
"stylesheet");
    prismStylesheet2.setAttribute("href",
"https://cdn.jsdelivr.net/npm/prismjs@1.29.0/plugins/diff-highlight/prism-diff-highlight.css");
const prismScript2 = document.createElement("script");
prismScript2.setAttribute("src",
"https://cdn.jsdelivr.net/npm/prismjs@1.29.0/plugins/diff-highlight/prism-diff-highlight.js");
prismScript2.dataset.manual = true;

    let scriptsLoaded = 0;
    const
totalScripts = 4;

    const checkAllScriptsLoaded = () => {
scriptsLoaded++;
      if (scriptsLoaded === totalScripts) {
        resolve();
}
    };

    const handleScriptError = (error) => {
      reject(error);
};

    prismScript.addEventListener("load", checkAllScriptsLoaded);
prismScript.addEventListener("error", handleScriptError);
prismScript3.addEventListener("load", checkAllScriptsLoaded);
prismScript3.addEventListener("error", handleScriptError);
prismScript2.addEventListener("load", checkAllScriptsLoaded);
prismScript2.addEventListener("error", handleScriptError);
prismStylesheet.addEventListener("load", checkAllScriptsLoaded);
prismStylesheet.addEventListener("error", handleScriptError);
document.head.appendChild(prismScript);
document.head.appendChild(prismScript3);
document.head.appendChild(prismStylesheet2);
  });
}
In this updated version,
the function returns a new Promise that wraps the entire implementation. The
promise resolves when all four script and stylesheet elements have loaded
successfully, and rejects if any of the elements fail to load.The
checkAllScriptsLoaded() function increments the scriptsLoaded variable each time
it is called. When scriptsLoaded equals the totalScripts variable, it resolves
the promise.The handleScriptError() function is called when any of the scripts
fail to load, and rejects the promise with the error message.Finally, the
function appends each element to the head section of the HTML document as
before, and adds event listeners to each element to detect when they have loaded
successfully or failed to load.
